def solution(n, t, m, timetable):

    crew_timetable = [(60 * int(e[:2]) + int(e[3:])) for e in timetable]
    crew_timetable.sort()
    len_crew_timetable = len(crew_timetable)

    bus_timetable = [(60 * 9) + (t * i) for i in range(n)]

    answer = 0
    pointer = 0

    for bus_time in bus_timetable:
        on_bus = 0
        while pointer < len_crew_timetable and crew_timetable[pointer] <= bus_time and m > on_bus:
            pointer += 1
            on_bus += 1

        if on_bus == m:
            answer = crew_timetable[pointer - 1] - 1
        elif on_bus < m:
            answer = bus_time

    return str(answer // 60).zfill(2) + ":" + str(answer % 60).zfill(2)


# 이 경우는 9시 전에 도착한 크루는 4명이고 버스는 9시에 출발하므로 크루 한명이 버스에 탈 수 있으므로 콘은 버스가 출발하는 시간에 도착하면 된다.
print(solution(1,1,5,["08:00", "08:01", "08:02", "08:03"]))

# 이 경우는 9시 전에 도착한 크루는 1명("08:00")이고 버스는 9시에 출발하므로 크루 한명이 버스를 탈 수 있다.
# (마지막 버스일 경우를 찾기 위해서 로직 상 버스는 총 2대이지만 첫번째 버스일 때 크루 중에 8시에 도착한 크루만 탈 수 있고 한자리가 남아서 콘이 탈 수 있으므로 answer은 출발할 버스의 시간이 된다.)
# 두번째 버스는 "09:10"에 출발하므로 크루 2명("09:09", "09:10")이 모두 버스에 탈 수 있고 남는 자리가 없으므로 콘이 버스를 타기 위해서는 가장 마지막에 도착한 크루보다 1분 전에 도착해야 한다.
print(solution(2,10,2,["09:10", "09:09", "08:00"]))

# 이 경우는 9시에 도착한 크루가 4명이고 버스는 "09:00", "09:01" 에 출발하므로 첫번째 버스는 크루 2명이 타고 간다
# (마지막 버스일 경우를 찾기 위해서 로직 상 버스는 총 2대이지만 첫번째 버스일 때도 콘이 타지 못한다면 answer은 마지막에 도착한 크루보다 1분 전에 도착한 값이 들어간다.)
# 두번째 버스에서는 "09:01"에 출발하므로 크루 2명이 모두 버스에 탈 수 있고 남는 자리가 없으므로 콘이 버스를 타기 위해서는 가장 마지막에 도착한 크루보다 1분 전에 도착해야 한다.
print(solution(2,1,2,["09:00", "09:00", "09:00", "09:00"]))

# 이 경우는 9시 전에 도착한 크루가 모두 5명이므로 9시에 모든 크루가 타서 출발할 수 있으므로 제일 늦게 도착한 크루보다 1분 전에 도착해야 콘이 버스에 탈 수 있다.
print(solution(1,1,5,["00:01", "00:01", "00:01", "00:01", "00:01"]))

# 이 경우는 9시 전에 도착한 크루가 없으니 대기열에 크루가 있더라도 버스에 해당 크루는 타지 못한다.
print(solution(1, 1, 1, ["23:59"]))

# 이 경우는 9시 전에 도착한 크루는 단 한명도 없으니 모든 버스인 경우에서, 크루를 단 한명도 태우지 않는다.
print(solution(10, 60, 45,
               ["23:59", "23:59", "23:59", "23:59", "23:59", "23:59", "23:59", "23:59", "23:59", "23:59", "23:59",
                "23:59", "23:59", "23:59", "23:59", "23:59", ]))

# 이 경우는 첫번째 버스에서 모두 태울 수 있지만 콘은 도착할 수 있는 시간 중에서 가장 늦게 도착해야한다.
print(solution(10, 60, 45,
               ["08:00", "08:00", "08:00", "08:00", "08:00", "08:00", "08:00", "08:00", "08:00", "08:00", "08:00",
                "08:00", "08:00", "08:00", "08:00", "08:00", ]))


# 참고:
# https://tech.kakao.com/2017/09/27/kakao-blind-recruitment-round-1/
# https://yabmoons.tistory.com/637
# https://mjmjmj98.tistory.com/121
