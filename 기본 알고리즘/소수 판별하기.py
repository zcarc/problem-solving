
def isPrime(n):

    for i in range(2, int(n ** (1/2)) + 1):
        if n % i == 0:
            return False

    return True


# 제곱근까지만 구하는 이유는
# 8이 소수인지 확인한다면
# 8은 2와 4로 나눈 나머지가 0이므로 소수가 아니다
# 2로 나누든 4로 나누든 몫은 0이고
# 2 * 4 = 8
# 4 * 2 = 8
# 서로 대칭하기 때문에 제곱근까지만 구한다.


# 12가 소수인지 확인한다면
# 2 * 6 = 12
# 3 * 4 = 12
# 12의 제곱근 = 3

# 7이 소수인지 확인한다면
# 2 * 3 = 6
# 3 * 2 = 6
# 4 * 2 = 8 -> 7보다 8이 크므로 애초에 나눌 수 없음
# 나눠지는 수가 없음
# 7의 제곱근 = 2

# 제곱근까지 구하는것은
# 만약 8 이었다면
# 2 * 4 = 8
# 8의 제곱근 = 2 일 때,
# 2, 4로 나눠떨어져서 소수가 아닌데
# 7은 2는 물론이고 4로도 나눠떨어지지 않으므로 소수라고 할 수 있다.